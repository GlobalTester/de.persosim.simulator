package de.persosim.simulator.perso;

import de.persosim.simulator.cardobjects.MasterFile;
import de.persosim.simulator.cardobjects.TrustPointCardObject;
import de.persosim.simulator.cardobjects.TrustPointIdentifier;
import de.persosim.simulator.crypto.certificates.CardVerifiableCertificate;
import de.persosim.simulator.exception.AccessDeniedException;
import de.persosim.simulator.exception.CertificateNotParseableException;
import de.persosim.simulator.protocols.ta.TerminalType;
import de.persosim.simulator.tlv.ConstructedTlvDataObject;
import de.persosim.simulator.utils.HexString;

/**
 * Standard personalization with same defaults used within the test PKI but with
 * trustpoints based on keys provided.
 * <p/>
 * This personalization is intended to be as close to the currently available
 * nPA as possible. During development the closest already supported
 * configuration is used.
 * 
 * @author amay
 * 
 */
public class DefaultPersoGt extends Profile01 {

	@Override
	protected void addTaTrustPoints(MasterFile mf) throws CertificateNotParseableException, AccessDeniedException {
		// certificates
		byte[] cvcaIsData = HexString
				.toByteArray
		byte[] cvcaAtData = HexString
				.toByteArray
		byte[] cvcaStData = HexString
				.toByteArray

		ConstructedTlvDataObject cvcaIsTlv = new ConstructedTlvDataObject(cvcaIsData);
		ConstructedTlvDataObject cvcaAtTlv = new ConstructedTlvDataObject(cvcaAtData);
		ConstructedTlvDataObject cvcaStTlv = new ConstructedTlvDataObject(cvcaStData);

		// TA trustpoints
		TrustPointCardObject trustPointIs = new TrustPointCardObject(new TrustPointIdentifier(TerminalType.IS),
				new CardVerifiableCertificate(cvcaIsTlv));
		mf.addChild(trustPointIs);

		TrustPointCardObject trustPointAt = new TrustPointCardObject(new TrustPointIdentifier(TerminalType.AT),
				new CardVerifiableCertificate(cvcaAtTlv));
		mf.addChild(trustPointAt);

		TrustPointCardObject trustPointSt = new TrustPointCardObject(new TrustPointIdentifier(TerminalType.ST),
				new CardVerifiableCertificate(cvcaStTlv));
		mf.addChild(trustPointSt);
	}
}
