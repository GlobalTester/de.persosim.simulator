package de.persosim.simulator.perso;

import de.persosim.simulator.cardobjects.TrustPointCardObject;
import de.persosim.simulator.cardobjects.TrustPointIdentifier;
import de.persosim.simulator.crypto.certificates.CardVerifiableCertificate;
import de.persosim.simulator.exception.CertificateNotParseableException;
import de.persosim.simulator.protocols.ta.TerminalType;
import de.persosim.simulator.tlv.ConstructedTlvDataObject;
import de.persosim.simulator.utils.HexString;

/**
 * Standard personalization with same defaults used within the test PKI but with
 * trustpoints based on keys provided.
 * <p/>
 * This personalization is intended to be as close to the currently available
 * nPA as possible. During development the closest already supported
 * configuration is used.
 * 
 * @author amay
 * 
 */
public class DefaultPersoGt extends Profile01 {

	@Override
	protected void addTaTrustPoints() throws CertificateNotParseableException {
		// certificates
		byte[] cvcaIsData = HexString
				.toByteArray
		byte[] cvcaAtData = HexString
				.toByteArray("7F218201B47F4E82016C5F290100420D444541544356434130303030317F4982011D060A04007F000702020202038120A9FB57DBA1EEA9BC3E660A909D838D726E3BF623D52620282013481D1F6E537782207D5A0975FC2C3057EEF67530417AFFE7FB8055C126DC5C6CE94A4B44F330B5D9832026DC5C6CE94A4B44F330B5D9BBD77CBF958416295CF7E1CE6BCCDC18FF8C07B68441048BD2AEB9CB7E57CB2C4B482FFC81B7AFB9DE27E1E3BD23C23A4453BD9ACE3262547EF835C3DAC4FD97F8461A14611DC9C27745132DED8E545C1D54C72F0469978520A9FB57DBA1EEA9BC3E660A909D838D718C397AA3B561A6F7901E0E82974856A7864104388F3CEABBBF5570E353F49B5178597BD394F0C15052C6C6AEE034A6ED4C724E07AE243B00D6B4FA7D6B316A71371C771A4B9016EC8C526C4429C0C3A50ED1888701015F200D444541544356434130303030317F4C12060904007F0007030102025305FE1FFFFFFF5F25060105000901005F24060106000901005F3740280E6AFB17D4513A82D49D197885623EC9190ABE6BA17C05A5ADD7AB458D386436CE33FB3EAE2FE09B93D73FBF715CA78112A08585D852B627813A8A40868C36");
		byte[] cvcaStData = HexString
				.toByteArray

		ConstructedTlvDataObject cvcaIsTlv = new ConstructedTlvDataObject(cvcaIsData);
		ConstructedTlvDataObject cvcaAtTlv = new ConstructedTlvDataObject(cvcaAtData);
		ConstructedTlvDataObject cvcaStTlv = new ConstructedTlvDataObject(cvcaStData);

		// TA trustpoints
		TrustPointCardObject trustPointIs = new TrustPointCardObject(new TrustPointIdentifier(TerminalType.IS),
				new CardVerifiableCertificate(cvcaIsTlv));
		mf.addChild(trustPointIs);

		TrustPointCardObject trustPointAt = new TrustPointCardObject(new TrustPointIdentifier(TerminalType.AT),
				new CardVerifiableCertificate(cvcaAtTlv));
		mf.addChild(trustPointAt);

		TrustPointCardObject trustPointSt = new TrustPointCardObject(new TrustPointIdentifier(TerminalType.ST),
				new CardVerifiableCertificate(cvcaStTlv));
		mf.addChild(trustPointSt);
	}
}
